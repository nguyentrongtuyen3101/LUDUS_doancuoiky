"use strict";
const command_1 = require("@oclif/command");
const prisma_merge_1 = require("./prisma-merge");
class PrismaMerge extends command_1.Command {
    async run() {
        const { flags } = this.parse(PrismaMerge);
        await prisma_merge_1.merge(flags.baseFile, flags.schemaFilePatterns, flags.outputFile, flags.excludedFilePattern);
        this.log(`Merged prima files into ${flags.outputFile}`);
    }
}
PrismaMerge.description = 'Merge all *.prisma files into one';
PrismaMerge.flags = {
    version: command_1.flags.version({ char: 'v' }),
    help: command_1.flags.help({ char: 'h' }),
    baseFile: command_1.flags.string({ description: 'Base file usually with datasource & generator statement', char: 'b', default: 'src/prisma/base.prisma' }),
    schemaFilePatterns: command_1.flags.string({ description: 'Glob to all prisma files to include', char: 's', default: 'src/**/*.prisma' }),
    outputFile: command_1.flags.string({ description: 'Output file', char: 'o', default: 'src/prisma/schema.prisma' }),
    excludedFilePattern: command_1.flags.string({ description: 'Comma separated glob patterns for excluded files (e.g schema.prisma in migrations / generated folder)', char: 'e', default: 'src/**/schema.prisma' })
};
module.exports = PrismaMerge;
